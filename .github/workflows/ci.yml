name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:

  lint-build:
    name: Test Linting
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dev dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -U black flake8 flake8-black pep8-naming
    - name: Flake8
      run: |
          flake8 .

  lint-wheel:
    name: Check Wheel
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dev dependencies
      run: |
          python -m pip install --upgrade pip twine
    - name: Build wheel
      run: |
          pip wheel -w dist --no-deps .
    - name: Check wheel
      run: |
          twine check dist/*

  test-examples-build:
    name: Test Examples
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install llvmpipe and lavapipe for offscreen canvas
      run: |
        sudo apt-get update -y -qq
        sudo apt install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers
    - name: Install dev dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
    - name: Test examples
      env:
        EXPECT_LAVAPIPE: true
      run: |
          pytest -v examples

  test-builds:
    name: ${{ matrix.name }}
    timeout-minutes: 5
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Test Linux py38
            os: ubuntu-latest
            pyversion: '3.8'
          - name: Test Linux py39
            os: ubuntu-latest
            pyversion: '3.9'
          - name: Test Linux py310
            os: ubuntu-latest
            pyversion: '3.10'
          - name: Test Linux py311
            os: ubuntu-latest
            pyversion: '3.11'
          - name: Test Linux py312
            os: ubuntu-latest
            pyversion: '3.12'
          - name: Test Linux pypy3
            os: ubuntu-latest
            pyversion: 'pypy3.9'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Install llvmpipe and lavapipe for offscreen canvas
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -y -qq
        sudo apt install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers
    - name: Install dev dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
    - name: Unit tests
      run: |
          pytest -v tests

  publish:
    name: Publish to Github and Pypi
    runs-on: ubuntu-latest
    needs: [lint-build, lint-wheel, test-examples-build, test-builds]
    if: success() && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Build wheel
      run: |
          python -m pip install --upgrade pip
          pip wheel -w dist --no-deps .
    - name: Get version from git ref
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Create GH release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
            Autogenerated wheels.
            See [the changelog](https://github.com/pygfx/shadertoy/blob/main/CHANGELOG.md) for details.
        draft: false
        prerelease: false
    - name: Upload release assets
      # Move back to official action after fix https://github.com/actions/upload-release-asset/issues/4
      uses: AButler/upload-release-assets@v2.0
      with:
        release-tag: ${{ steps.get_version.outputs.VERSION }}
        files: 'dist/*.tar.gz;dist/*.whl'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
